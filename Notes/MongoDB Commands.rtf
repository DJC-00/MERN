Examples of MongoDB Crud commands

// Changes current DB to specified DB (If it does not exist, it is automatically created)
use exampleDB

// Create a collection in the selected DB
db.createCollection("myCollection")

// Destroy a collection in selected DB
db.myCollection.drop()

// Insert a new document in to our collection
db.myCollection.insert({class : 'Test', name : 'DJ', title : 'Admin'})  

// Find all documents in collection
db.myCollection.find({})    
db.myCollection.find()

// Adding .pretty() will return the document in an easy to read format
db.myCollection.find().pretty()

// Read a document (query must include a key value pair to search for, will return the entire document)
db.myCollection.find({class : 'Test'})
db.myCollection.find({name : 'DJ'})
db.myCollection.find({title : 'Admin'})

// Update a document
// Update or add a specific field inside a document
db.COLLECTION_NAME.update({class : 'Test'}, {$set: {name : 'DJ'}})
db.COLLECTION_NAME.update({class : 'Test'}, {$set: {location: "Mountain View"}})

// Delete a document
db.myCollection.remove({class : 'Test'})

// Remove all documents that match that query (false)
db.myCollection.remove({class : 'Test'}, false)

// Remove the first document that matches the query (true)
db.myCollection.remove({class : 'Test'}, true)

// Opperators
$gt (greater than)
$gte (greater than or equal to)
$lt (less than)
$lte (less than or equal to)

//Arrays
$in (in array)
$push 
$pop
$addToSet 
$pull

////////

Create 5 students with the appropriate info.
> db.users.insert({name: 'Amelia', home_state: 'Ohio', lucky_number: 99, birthday: {month : 12, day: 16, year: 1989}})
> db.users.insert({name: 'DJ', home_state: 'Ohio', lucky_number: 21, birthday: {month : 8, day: 10, year: 1993}})
> db.users.insert({name: 'Joe', home_state: 'Montana', lucky_number: 221, birthday: {month : 4, day: 20, year: 1990}})
> db.users.insert({name: 'BobbyJoe', home_state: 'Kentucky', lucky_number: 43, birthday: {month : 2, day: 21, year: 1995}})
> db.users.insert({name: 'Ellie', home_state: 'California', lucky_number: 1, birthday: {month : 9, day: 9, year: 1989}})
or
> db.users.insertMany( [
    {name: 'Amelia', home_state: 'Ohio', lucky_number: 99, birthday: {month : 12, day: 16, year: 1989}},
    {name: 'DJ', home_state: 'Ohio', lucky_number: 21, birthday: {month : 8, day: 10, year: 1993}},
    {name: 'Joe', home_state: 'Montana', lucky_number: 221, birthday: {month : 4, day: 20, year: 1990}},
    {name: 'BobbyJoe', home_state: 'Kentucky', lucky_number: 43, birthday: {month : 2, day: 21, year: 1995}},
    {name: 'Ellie', home_state: 'California', lucky_number: 1, birthday: {month : 9, day: 9, year: 1989}}
] );

Get all students.
db.users.find()

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
> db.users.find({home_state: 'California'}).pretty()

Get all students whose lucky number is greater than 3
> db.users.find({lucky_number:{$gt:3}}).pretty()

Get all students whose lucky number is less than or equal to 10
> db.users.find({lucky_number:{$lte:10}}).pretty()

Get all students whose lucky number is between 1 and 9 (inclusive)
> db.users.find({ $and: [ {lucky_number:{$gte:1}},{lucky_number:{$lte:9}} ]})

Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
> db.users.updateMany({}, { $set: {intersts:['coding', 'brunch', 'MongoDB']}})

Add some unique interests for each particular student into each of their interest arrays.
> db.users.updateOne({name:'DJ'}, {$push: {intersts: 'DnD'}})
> db.users.updateOne({name:'Amelia'}, {$push: {intersts: 'Puzzles'}})
> db.users.updateOne({name:'Joe'}, {$push: {intersts: 'Audio'}})
> db.users.updateOne({name:'BobbyJoe'}, {$push: {intersts: 'Dirt Track Racing'}})
> db.users.updateOne({name:'Ellie'}, {$push: {intersts: 'Drinking'}})

Add the interest 'taxes' into someone's interest array.
> db.users.updateOne({name:'Ellie'}, {$push: {intersts: 'taxes'}})

Remove the 'taxes' interest you just added.
> db.users.updateOne({name:'Ellie'}, {$pull: {intersts: 'taxes'}})

Remove all students who are from California.
> db.users.deleteMany({home_state:'California'})

Remove a student by name. 
> db.users.deleteOne({name:'BobbyJoe'})

Remove a student whose lucky number is greater than 5 (JUST ONE)
> db.users.deleteOne({lucky_number:{$gt:5}})


///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////// Add Users From Washington ////////////////////////////////////////////

> db.users.insertMany( [
    {name: 'Bob', home_state: 'Washington', lucky_number: 99, birthday: {month : 12, day: 16, year: 1989}},
    {name: 'Tom', home_state: 'Washington', lucky_number: 21, birthday: {month : 8, day: 10, year: 1993}},
    {name: 'Brandon', home_state: 'Washington', lucky_number: 221, birthday: {month : 4, day: 20, year: 1990}},
    {name: 'Edd', home_state: 'Washington', lucky_number: 43, birthday: {month : 2, day: 21, year: 1995}},
    {name: 'Kyle', home_state: 'Washington', lucky_number: 1, birthday: {month : 9, day: 9, year: 1989}}
] );

///////////////////////////////////////////////////////////////////////////////////////////////////////////////

Add a field to each student collection called 'number_of_belts' and set it to 0.
> db.users.updateMany({}, { $set: {number_of_belts : 0 }})

Increment this field by 1 for all students in Washington (Seattle Dojo).
> db.users.updateMany({home_state:'Washington'}, { $inc: {number_of_belts : 1}})

Rename the 'number_of_belts' field to 'belts_earned'
> db.users.updateMany({}, { $rename: {'number_of_belts':'belts_earned'}})

Remove the 'lucky_number' field.
> db.users.updateMany({}, { $unset: {lucky_number:''}})

Add a 'updated_on' field, and set the value as the current date.
> db.users.updateMany({}, { $currentDate: {updated_on: true}})